// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc571.emmet.commands;
import org.usfirst.frc571.emmet.Robot;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.GenericHID.Hand;
import edu.wpi.first.wpilibj.command.Command;

/**
 *
 */
public class MoveElevator extends Command {

	Joystick opStick = Robot.oi.getOpStick();
	Joystick driveStick = Robot.oi.getDrive();

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
	public MoveElevator() {

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
		requires(Robot.elevator);

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
		this.setRunWhenDisabled(false);
	}

	// Called just before this Command runs the first time
	@Override
	protected void initialize() {
		end();
	}

	// Called repeatedly when this Command is scheduled to run
	@Override
	protected void execute() {
		/***** SINGLE STICK OPERATION *******/
		if(driveStick.getRawButton(4)) {
			Robot.elevator.move(0.6);
		} else if (driveStick.getRawButton(3)) {
			Robot.elevator.move(-0.6);
		} else if (driveStick.getRawButton(6)) {
			Robot.elevator.move(0.3);
		} else if(driveStick.getRawButton(5)) {
			Robot.elevator.move(-0.3);
		} else {
			Robot.elevator.move(0.0);
		}
		/******* DUAL STICK OPERATION *******/
		//Robot.elevator.move(-opStick.getRawAxis(1));
	}

	// Make this return true when this Command no longer needs to run execute()
	@Override
	protected boolean isFinished() {
		if (Robot.elevator.getLowerLimitSwitch() || Robot.elevator.getUpperLimitSwitch()) {
			return false;
		}
		return true;
	}

	// Called once after isFinished returns true
	@Override
	protected void end() {
		Robot.elevator.stop();
	}

	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	@Override
	protected void interrupted() {
		Robot.elevator.stop();
	}
}
