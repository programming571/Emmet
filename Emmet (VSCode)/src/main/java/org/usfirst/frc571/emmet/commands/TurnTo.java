// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc571.emmet.commands;

import org.usfirst.frc571.emmet.Robot;
import org.usfirst.frc571.emmet.RobotMap;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 *
 */
public class TurnTo extends Command {
	private double degrees = 0;
	private double lastAngle = 0.0;
	private int i = 0;
	private boolean isFinishing = false;
	private long startTime;

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
	public TurnTo(double degrees) {

		this.degrees = degrees;
		
		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
		requires(Robot.driveTrain);

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	}

	// Called just before this Command runs the first time
	@Override
	protected void initialize() {
		startTime = System.currentTimeMillis();
	}

	// Called repeatedly when this Command is scheduled to run
	@Override
	protected void execute() {
		// duration = System.currentTimeMillis()-startTime;
		Robot.driveTrain.turnTo(degrees);
	}

	// Make this return true when this Command no longer needs to run execute()
	@Override
	protected boolean isFinished() {
		// if (89.5 < Robot.driveTrain.getAngle() || Robot.driveTrain.getAngle() < 90.5)
		// {
		// return true;
		// }
		// if(Math.abs(Robot.driveTrain.getAngle() - lastAngle) < )

		if (Math.abs(degrees - SmartDashboard.getNumber("ahrs/angle", 0)) < 3) {
			if (SmartDashboard.getNumber("ahrs/rate", 0) < 0.5) {
				if (i == 0) {
					isFinishing = true;
				}
				if (isFinishing) {
					i++;
				}
			} else {
				isFinishing = false;
				i = 0;
			}
			if (i > 25) { // check if works for n cycles
				System.out.println("true");
				return true;
			}
		}
		if(System.currentTimeMillis() - startTime > 5000) {
			System.out.println("TurnTo timeout");
			return true;
		}
		return false;
	}

	// Called once after isFinished returns true
	@Override
	protected void end() {
		Robot.driveTrain.drive(0, 0);
	}

	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	@Override
	protected void interrupted() {
		end();
	}
}