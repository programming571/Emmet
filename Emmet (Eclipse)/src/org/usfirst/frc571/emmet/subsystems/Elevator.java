// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc571.emmet.subsystems;

import org.usfirst.frc571.emmet.commands.*;
import org.usfirst.frc571.emmet.RobotMap;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Solenoid;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */

public class Elevator extends Subsystem {

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	private final WPI_TalonSRX elevatorDrive = RobotMap.elevatorElevatorDrive;
	private final DigitalInput upperLimitSwitch = RobotMap.elevatorUpperLimitSwitch;
	private final DigitalInput lowerLimitSwitch = RobotMap.elevatorLowerLimitSwitch;
	private final Solenoid elevatorBrake = RobotMap.elevatorElevatorBrake;

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	@Override
	public void initDefaultCommand() {
		
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

		setDefaultCommand(new MoveElevator());

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

		// Set the default command for a subsystem here.
		// setDefaultCommand(new MySpecialCommand());
	}

	@Override
	public void periodic() {
		
		// Put code here to be run every loop
	}

	// Put methods for controlling this subsystem
	// here. Call these from Commands.
	public void moveUp(double speed) {
		if (upperLimitSwitch.get()) {
			elevatorBrake.set(true);
			elevatorDrive.set(speed);
		} else { stop(); }
	}

	public void moveDown(double speed) {
		if (lowerLimitSwitch.get()) {
			elevatorBrake.set(true);
			elevatorDrive.set(speed);
		} else { stop(); }
	}

	public void stop() {
		elevatorDrive.set(0);
		elevatorBrake.set(false);
	}

	public void move(double speed) {

		LiveWindow.addActuator(getSubsystem(), getName(), elevatorDrive);
		if (speed > .15) {
			moveUp(speed);
		} else if (speed < -.15) {
			moveDown(speed);
		}
		else { 
			stop();
		}
	}

	public void home() {
		move(-0.2);
	}
	
	public boolean getUpperLimitSwitch() {
		return upperLimitSwitch.get();
	}
	
	public boolean getLowerLimitSwitch() {
		return lowerLimitSwitch.get();
	}
}
