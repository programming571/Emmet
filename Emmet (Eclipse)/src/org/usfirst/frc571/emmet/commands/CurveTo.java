// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc571.emmet.commands;

import org.usfirst.frc571.emmet.Robot;
import org.usfirst.frc571.emmet.RobotMap;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 *
 */
public class CurveTo extends Command {
	private float toAngle = 0;
	private double speed = 0.0;
	private double leftSpeed = 0.0;
	private double rightSpeed = 0.0;
	
	public CurveTo(float toAngle, double leftSpeed, double rightSpeed) {

		this.toAngle = toAngle;
		this.leftSpeed = leftSpeed;
		this.rightSpeed = rightSpeed;
		
		requires(Robot.driveTrain);
		
	}
	
	public CurveTo(float toAngle, double speed, double radius, boolean toLeft) {

		this.toAngle = toAngle;
		
		if(toLeft) {
			this.rightSpeed = speed;
			this.leftSpeed = (radius*speed)/(2.33+radius);
		}
		else {
			this.leftSpeed = speed;
//			this.rightSpeed = (2.33+radius)/radius*speed;
			this.rightSpeed = (radius*speed)/(2.33+radius);
		}
		
		requires(Robot.driveTrain);
		
	}

	// Called just before this Command runs the first time
	@Override
	protected void initialize() {
	}

	// Called repeatedly when this Command is scheduled to run
	@Override
	protected void execute() {
		Robot.driveTrain.drive(leftSpeed, rightSpeed);
	}

	// Make this return true when this Command no longer needs to run execute()
	@Override
	protected boolean isFinished() {
		// turning left
		if((rightSpeed > leftSpeed) && (SmartDashboard.getNumber("ahrs/angle", 0) < (toAngle + 8))) {
			System.out.println("finished curve to left");
			return true;
		}
		// turning right
		if((leftSpeed > rightSpeed) && (SmartDashboard.getNumber("ahrs/angle", 0) > (toAngle - 8))) {
			System.out.println("finished curve to right");
			return true;
		}
		return false;
	}

	// Called once after isFinished returns true
	@Override
	protected void end() {
		Robot.driveTrain.drive(0, 0);
	}

	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	@Override
	protected void interrupted() {
		end();
	}
}